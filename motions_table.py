import os
import psycopg2
import requests
from dotenv import load_dotenv

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

DB_NAME = os.getenv("DB_NAME")
DB_USER = os.getenv("DB_USER")
DB_PASSWORD = os.getenv("DB_PASSWORD")
DB_HOST = os.getenv("DB_HOST")
DB_PORT = os.getenv("DB_PORT")

API_URL = os.getenv("API_URL")
TOKEN = os.getenv("TOKEN_AD")

# üîπ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
conn = psycopg2.connect(
    dbname=DB_NAME,
    user=DB_USER,
    password=DB_PASSWORD,
    host=DB_HOST,
    port=DB_PORT
)

cur = conn.cursor()

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤ –∏–∑ –±–∞–∑—ã
cur.execute("SELECT Tournament_Slug FROM Tournaments;")
tournaments = cur.fetchall()

for tournament in tournaments:
    tournament_slug = tournament[0]  # –î–æ—Å—Ç–∞—ë–º slug —Ç—É—Ä–Ω–∏—Ä–∞

    # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑–æ–ª—é—Ü–∏–π
    url = f"{API_URL}/tournaments/{tournament_slug}/motions"
    headers = {"Authorization": f"Token {TOKEN}"}
    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        motions = response.json()

        for motion in motions:
            motion_id = motion["id"]
            info_slide_plain = motion["info_slide_plain"]
            motion_text = motion["text"]

            # üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞—Ä–∞–Ω–µ–µ
            round_number = None
            round_name = None

            # üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—É–Ω–¥–µ
            if "rounds" in motion and motion["rounds"]:
                round_id = motion["rounds"][0]["round"].split("/")[-1]  # –î–æ—Å—Ç–∞—ë–º ID —Ä–∞—É–Ω–¥–∞
                round_url = f"{API_URL}/tournaments/{tournament_slug}/rounds/{round_id}"
                round_response = requests.get(round_url, headers=headers)

                if round_response.status_code == 200:
                    round_data = round_response.json()
                    round_number = round_data.get("seq", None)  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ä–∞—É–Ω–¥–∞
                    round_name = round_data.get("name", None)  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—É–Ω–¥–∞


            cur.execute("""
                INSERT INTO Motions (Motion_ID, Tournament_Slug, Info_Slide_Plain, Motion_Text, Round_Number, Round_Name)
                VALUES (%s, %s, %s, %s, %s, %s)
                ON CONFLICT(Motion_ID) DO NOTHING;
            """, (motion_id, tournament_slug, info_slide_plain, motion_text, round_number, round_name))

        conn.commit()
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –æ —Ä–µ–∑–æ–ª—é—Ü–∏—è—Ö –¥–ª—è {tournament_slug} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ ({response.status_code}): {response.text}")

cur.close()
conn.close()







